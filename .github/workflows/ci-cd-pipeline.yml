name: Karate CI/CD

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  setup_environment:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get Changed Feature Files
      id: changed-feature-files
      uses: tj-actions/changed-files@v46.0.1
      with:
        files: '**.feature'
        only_changed: true

    - name: Check for Feature Files
      id: check_feature_files
      run: |
        if [ "${{ steps.changed-feature-files.outputs.any_changed }}" != 'true' ]; then
          echo "SKIP_TESTS=true" >> $GITHUB_ENV
          echo "No feature files to test. Exiting."
        else
          echo "SKIP_TESTS=false" >> $GITHUB_ENV
          echo "Changed feature files:"
          for file in ${{ steps.changed-feature-files.outputs.all_changed_files }}; do
            echo "$file"
          done
        fi

    - name: Set up JDK 17
      if: ${{ env.SKIP_TESTS == 'false' }}
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Run Karate Test
      if: ${{ env.SKIP_TESTS == 'false' }}
      id: run_karate_test
      run: |
        KARATE_OPTION="${{ steps.changed-feature-files.outputs.all_changed_files }} --tags ~@ignore"
        mvn test -DargLine="-Xmx3g" -fae -Dmaven.test.failure.ignore=true -Dkarate.options="${KARATE_OPTION}" | tee karate-run.log
        
    - name: Read Karate JSON Result
      id: read-json
      if: ${{ env.SKIP_TESTS == 'false' }}
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');

          const jsonString = fs.readFileSync('target/karate-reports/karate-summary-json.txt', 'utf8');
          const json = JSON.parse(jsonString);

          const testStatus = json.scenariosFailed > 0 || json.featuresFailed > 0 ? "FAILED üî¥" : "PASSED üü¢";

          // Log outputs for debug
          console.log(`Scenarios Passed: ${json.scenariosPassed}`);
          console.log(`Scenarios Failed: ${json.scenariosFailed}`);
          console.log(`Features Passed: ${json.featuresPassed}`);
          console.log(`Features Failed: ${json.featuresFailed}`);
          console.log(`Test Status: ${testStatus}`);

          core.setOutput('scenariosFailed', json.scenariosFailed);
          core.setOutput('scenariosPassed', json.scenariosPassed);
          core.setOutput('featuresFailed', json.featuresFailed);
          core.setOutput('featuresPassed', json.featuresPassed);
          core.setOutput('testStatus', testStatus);


    - name: Set Local Report URL
      if: ${{ env.SKIP_TESTS == 'false' }}
      run: |
        REPORT_URL="file://${{ github.workspace }}/target/karate-reports/karate-summary.html"
        echo "REPORT_URL=$REPORT_URL" >> $GITHUB_ENV

    - name: Upload Karate HTML Report
      if: ${{ env.SKIP_TESTS == 'false' }}
      uses: actions/upload-artifact@v4
      with:
        name: karate-html-report
        path: target/karate-reports/karate-summary.html

    - name: Output Report URL
      if: ${{ env.SKIP_TESTS == 'false' }}
      run: |
        echo "Report URL: $REPORT_URL"
        echo "## üìù [View Karate Summary Report]($REPORT_URL)" >> $GITHUB_STEP_SUMMARY

    - name: Hide previous comments
      uses: int128/hide-comment-action@v1
      with:
        contains: "ü•ã Karate Test Report"
        name: karate-summary
        path: target/karate-reports/karate-summary.html

    - name: Collect Failed Test Details (Console Log)
      if: ${{ env.SKIP_TESTS == 'false' }}
      id: collect-failures
      run: |
        FAILURES_FILE="target/karate-reports/failed-tests.txt"
        # Capture only scenario failure lines
        grep "<<< FAILURE!" karate-run.log | sed 's/Error: //g' > $FAILURES_FILE || true

        echo "failures<<EOF" >> $GITHUB_OUTPUT
        cat $FAILURES_FILE >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Comment on Pull Request
      if: ${{ env.SKIP_TESTS == 'false' }}
      uses: thollander/actions-comment-pull-request@v2
      with:
        message: |
          ### ü•ã Karate Test Report
          - **Status**: ${{ steps.read-json.outputs.testStatus }}
          - **Scenarios**: ${{ steps.read-json.outputs.scenariosPassed }} Passed | ${{ steps.read-json.outputs.scenariosFailed }} Failed
          - **Features**: ${{ steps.read-json.outputs.featuresPassed }} Passed | ${{ steps.read-json.outputs.featuresFailed }} Failed
          - üìù **[View Karate Summary Report](${{ env.REPORT_URL }})**

          #### ‚ùå Failed Scenarios (from console log)
          ```bash
          ${{ steps.collect-failures.outputs.failures }}
          ```
        GITHUB_TOKEN: ${{ secrets.KARATE_CICD_RW }}

    - name: Notify Slack
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"hello"}' \
        ${{ secrets.SLACK_WEBHOOK }}

    - name: Validate PR Checklist
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const body = context.payload.pull_request.body || "";

          // Each required checklist item must be checked ([x]) in the PR body
          const required = [
            "CI/CD check test report has been reviewed with no failures",
            "Description of PR has been included",
            "Correct labels have been added",
            "Tests have been run on changes made and all tests should pass",
            "PR has been assigned to yourself",
            "At least 2 reviewers have been added"
          ];

          const missing = required.filter(item => !body.includes(`[x] ${item}`));

          if (missing.length > 0) {
            core.setFailed(`‚ùå Checklist validation failed. Missing or unchecked items:\n${missing.join("\n")}`);
          } else {
            console.log("‚úÖ All required checklist items checked.");
          }

    - name: Fail if Tests Failed
      if: ${{ env.SKIP_TESTS == 'false' && steps.read-json.outputs.testStatus == 'FAILED üî¥' }}
      uses: actions/github-script@v6
      with:
        script: |
          core.setFailed('Test execution completed with some failures. Exiting with status code 1.')
